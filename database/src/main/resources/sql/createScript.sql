----------------------------------- DROP TABLES -----------------------------------
BEGIN TRANSACTION

DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS entry;
DROP TABLE IF EXISTS receipt;
DROP TABLE IF EXISTS article;
DROP TABLE IF EXISTS bankaccount;
DROP TABLE IF EXISTS cash;
DROP TABLE IF EXISTS creditcard;
DROP TABLE IF EXISTS methodofpayment;
DROP TABLE IF EXISTS news;
DROP TABLE IF EXISTS ticketidentifier;
DROP TABLE IF EXISTS reservation;
DROP TABLE IF EXISTS customer;
DROP TABLE IF EXISTS participation;
DROP TABLE IF EXISTS artist;
DROP TABLE IF EXISTS ticket;
DROP TABLE IF EXISTS seat;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS coordinate;
DROP TABLE IF EXISTS row;
DROP TABLE IF EXISTS gallery;
DROP TABLE IF EXISTS show;
DROP TABLE IF EXISTS room;
DROP TABLE IF EXISTS location;
DROP TABLE IF EXISTS performance;

COMMIT


----------------------------------- CREATE TABLES -----------------------------------
BEGIN TRANSACTION

CREATE TABLE artist (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	description VARCHAR(1024),
	firstname VARCHAR(50) NOT NULL,
	lastname VARCHAR(50) NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE performance (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL,
	description VARCHAR(1024) NOT NULL,
	duration Integer,
	performancetype VARCHAR(50),
	PRIMARY KEY(id)
);

CREATE TABLE participation (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	artistrole VARCHAR(50),
	description VARCHAR(1024),
	artist_id INTEGER NOT NULL,
	perf_id INTEGER NOT NULL, 
	PRIMARY KEY(id),
	FOREIGN KEY(artist_id) REFERENCES artist(id),
	FOREIGN KEY(perf_id) REFERENCES performance(id)
);

CREATE TABLE location (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	city VARCHAR(50),
	country VARCHAR(50),
	postalcode VARCHAR(25),
	street VARCHAR(50),
	description VARCHAR(1024),
	name VARCHAR(100) NOT NULL,
	owner VARCHAR(100),
	PRIMARY KEY(id)
);

CREATE TABLE room (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	description VARCHAR(1024),
	name VARCHAR(50),
	loc_id INTEGER NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY (loc_id) REFERENCES location(id)
);

CREATE TABLE show (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	canceled BOOLEAN,
	dateofperformance TIMESTAMP,
	perf_id INTEGER NOT NULL,
	room_id INTEGER NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(perf_id) REFERENCES performance(id),
	FOREIGN KEY(room_id) REFERENCES room(id)
);

CREATE TABLE category (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	description VARCHAR(1024),
	name VARCHAR(50) NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE gallery (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	description VARCHAR(1024),
	name VARCHAR(50),
	sequence INTEGER NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE row (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	description VARCHAR(1024),
	name VARCHAR(50),
	sequence INTEGER NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE seat(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50),
	description VARCHAR(1024),
	sequence INTEGER NOT NULL,
	cat_id INTEGER NOT NULL,
	row_id INTEGER NOT NULL,
	gallery_id INTEGER,
	room_id INTEGER NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(cat_id) REFERENCES category(id),
	FOREIGN KEY(row_id) REFERENCES row(id),
	FOREIGN KEY(gallery_id) REFERENCES gallery(id),
	FOREIGN KEY(room_id) REFERENCES room(id)
);

CREATE TABLE ticket (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	description VARCHAR(1024),
	price DOUBLE NOT NULL,
	seat_id INTEGER NOT NULL,
	show_id INTEGER NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(seat_id) REFERENCES seat(id),
	FOREIGN KEY(show_id) REFERENCES show(id)
);

CREATE TABLE article (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	available INTEGER,
	description VARCHAR(1024),
	name VARCHAR(100) NOT NULL,
	price INTEGER NOT NULL,
	perf_id INTEGER NOT NULL, 
	PRIMARY KEY(id),
	FOREIGN KEY (perf_id) REFERENCES performance(id)
);

CREATE TABLE bankaccount (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	bic VARCHAR(11),
	iban VARCHAR(34),
	accountnumber VARCHAR(50) NOT NULL,
	bank VARCHAR(50) NOT NULL,
	bankcode VARCHAR(50) NOT NULL,
	owner VARCHAR(50),
	PRIMARY KEY(id)
);

CREATE TABLE cash (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	PRIMARY KEY(id)
);

CREATE TABLE creditcard (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	creditcardnumber VARCHAR(20) NOT NULL,
	creditcardtype VARCHAR(50),
	owner VARCHAR(50),
	validthru DATE,
	PRIMARY KEY(id)
);

CREATE TABLE customer (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	city VARCHAR(50),
	country VARCHAR(50),
	postalcode VARCHAR(25),
	street VARCHAR(50),
	dateofbirth DATE,
	email VARCHAR(255),
	firstname VARCHAR(50) NOT NULL,
	lastname VARCHAR(50) NOT NULL,
	passwordhash VARCHAR(512),
	gender VARCHAR(25),
	telefonnumber VARCHAR(50),
	title VARCHAR(25),
	username VARCHAR(50),
	blocked BOOLEAN,
	customergroup VARCHAR(50),
	ticketcardnumber VARCHAR(50),
	ticketcardvalidthru DATE,
	PRIMARY KEY(id)
);

CREATE TABLE employee (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	city VARCHAR(50),
	country VARCHAR(50),
	postalcode VARCHAR(25),
	street VARCHAR(50),
	dateofbirth DATE,
	email VARCHAR(255),
	firstname VARCHAR(50) NOT NULL,
	lastname VARCHAR(50) NOT NULL,
	passwordhash VARCHAR(512),
	gender VARCHAR(25),
	telefonnumber VARCHAR(50),
	title VARCHAR(25),
	username VARCHAR(50),
	employeedsince DATE,
	insurancenumber VARCHAR(50),
	permission VARCHAR(1024),
	PRIMARY KEY(id)
);

CREATE TABLE methodofpayment (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	cust_id INTEGER NOT NULL,
	deleted BOOLEAN DEFAULT false,
	PRIMARY KEY(id),
	FOREIGN KEY(cust_id) REFERENCES customer(id)
);

CREATE TABLE receipt (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	transactiondate TIMESTAMP,
	transactionstate VARCHAR(50),
	cust_id INTEGER NOT NULL,
	methofpay_id INTEGER NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(cust_id) REFERENCES customer(id),
	FOREIGN KEY(methofpay_id) REFERENCES methodofpayment(id)
);

CREATE TABLE reservation (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	reservationnumber INTEGER NOT NULL,
	cust_id INTEGER NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(cust_id) REFERENCES customer(id)
);

CREATE TABLE ticketidentifier (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	cancellationreason VARCHAR(255),
	UUID UUID,
	valid BOOLEAN DEFAULT true, 
	voidationtime TIMESTAMP,
	voidedby VARCHAR(50),
	res_id INTEGER,
	ticket_id INTEGER NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(res_id) REFERENCES reservation(id),
	FOREIGN KEY(ticket_id) REFERENCES ticket(id)
);

CREATE TABLE entry (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	amount INTEGER NOT NULL,
	position INTEGER NOT NULL,
	unitprice INTEGER NOT NULL,
	article_id INTEGER,
	rec_id INTEGER NOT NULL,
	ticket_id INTEGER,
	PRIMARY KEY(id),
	FOREIGN KEY(article_id) REFERENCES article(id),
	FOREIGN KEY(rec_id) REFERENCES receipt(id),
	FOREIGN KEY(ticket_id) REFERENCES ticketidentifier(id)
);

CREATE TABLE news (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	newstext VARCHAR(1024) NOT NULL,
	submittedon TIMESTAMP,
	title VARCHAR(255) NOT NULL,
	PRIMARY KEY(id)
);

COMMIT